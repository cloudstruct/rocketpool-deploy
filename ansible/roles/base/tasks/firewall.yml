---
- name: Base-Firewall | Configure Firewall rules
  community.general.ufw:
    state: "{{ 'enabled' if (node.ufw.enabled | default(True)) else 'disabled' }}"
    direction: incoming
    policy: deny

- name: Base-Firewall | Set SSH retry limit on firewall
  community.general.ufw:
    rule: limit
    port: ssh
    proto: tcp
  when: node.ufw.enabled | default(True)

- name: Base-Firewall | Allow SSH, ETH1 and ETH2
  community.general.ufw:
    state: enabled
    rule: allow
    name: "{{ rule.name | default(omit) }}"
    port: "{{ rule.port | default(omit) }}"
    comment: "{{ rule.comment | default(omit) }}"
    proto: "{{ rule.proto | default(omit) }}"
  loop:
    - {name: 'OpenSSH', comment: "Allow to OpenSSH Port"}
    - {port: "{{ rocketpool.ports.executionCommonP2pPort }}", proto: 'tcp', comment: "Allow ETH1 Discovery TCP"}
    - {port: "{{ rocketpool.ports.executionCommonP2pPort }}", proto: 'udp', comment: "Allow ETH1 Discovery UDP"}
    - {port: "{{ rocketpool.ports.consensusCommonP2pPort }}", proto: 'tcp', comment: "Allow ETH2 Discovery TCP"}
    - {port: "{{ rocketpool.ports.consensusCommonP2pPort }}", proto: 'udp', comment: "Allow ETH2 Discovery UDP"}
    - {port: "{{ prometheus.node_exporter.port }}", proto: 'tcp', comment: "Allow prometheus to scrape node-exporter"}
    - {port: "{{ prometheus.port }}", proto: 'tcp', comment: "Allow prometheus port ingress"}
    - {port: "{{ grafana.port }}", proto: 'tcp', comment: "Allow grafana port ingress"}
  loop_control:
    loop_var: 'rule'
    label: "{{ rule.comment }}"
  when: node.ufw.enabled | default(True)

- name: Base-Firewall | Add fail2ban sshd configuration
  community.general.ini_file:
    path: /etc/fail2ban/jail.d/ssh.conf
    section: "sshd"
    option: "{{ ssh_config.option }}"
    value: "{{ ssh_config.value }}"
    owner: 'root'
    group: 'root'
    mode: 0644
  loop:
    - {option: "enabled", value: "true"}
    - {option: "banaction", value: "ufw"}
    - {option: "port", value: "{{ node.ssh.port }}"}
    - {option: "filter", value: "sshd"}
    - {option: "logpath", value: "%(sshd_log)s"}
    - {option: "maxretry", value: "5"}
  loop_control:
    loop_var: 'ssh_config'
    label: "{{ ssh_config.option }}"
  when: node.fail2ban.enabled | default(True)
  notify:
    - Restart fail2ban
