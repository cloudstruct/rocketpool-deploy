---
- name: System | Update apt cache
  ansible.builtin.apt:
    upgrade: 'dist'
    update_cache: true
    cache_valid_time: '{{ 60 * 60 * 24 }}'

- name: System | Install packages
  ansible.builtin.apt:
    state: present
    package: "{{ default_packages }}"

- name: System | Set swappiness
  ansible.posix.sysctl:
    name: "{{ sysctl.name }}"
    value: "{{ sysctl.value }}"
    state: present
  loop_control:
    loop_var: 'sysctl'
    label: "{{ sysctl.name }}: {{ sysctl.value }}"
  loop:
    - {name: "vm.swappiness", value: "{{ node.vm_swappiness | default(system.vm_swappiness) }}"}
    - {name: "vm.vfs_cache_pressure", value: "{{ node.vfs_cache_pressure | default(system.vfs_cache_pressure) }}"}
  tags: ['skipci']

- name: System | Secure shared memory
  ansible.builtin.mount:
    src: none
    path: /run/shm
    fstype: tmpfs
    opts: rw,noexec,nosuid,nodev
    state: mounted
  tags: ['skipci']

- name: System | Create rocketpool user
  ansible.builtin.user:
    name: "{{ rocketpool.user | default('rp') }}"
    shell: /bin/bash
    uid: "{{ (rocketpool.uid | default('1001')) if lookup('env', 'CI') != 'true' else omit }}"

- name: System | Add rocketpool user to sudoers
  community.general.sudoers:
    name: "rocketpool"
    state: present
    user: "{{ rocketpool.user | default('rp') }}"
    nopassword: true
    runas: ALL
    commands: ALL

- name: System | Add authorized keys
  ansible.posix.authorized_key:
    user: "{{ node.ssh.user }}"
    state: present
    key: "{{ key }}"
  when: node.ssh.user | default(false)
  loop: "{{ node.ssh.public_keys }}"
  loop_control:
    loop_var: 'key'
