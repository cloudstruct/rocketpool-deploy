---
# Region to deploy your rocketpool vpc and node
region: 'us-east-2'

# Whether or not to create the SSH key for the node
# Set to false if specifying a pre-existing public key
create_rsa_key: true

# CloudWatch alerts for your node
cloudwatch:
  cpu:
    alarm_name: cpu-utilization-high
    alarm_description: "CPU Utilization is over 85% for 6 minutes on core node."
    comparison_operator: "GreaterThanOrEqualToThreshold"
    evaluation_periods: "3"
    threshold: "85"
    period: "120"
    namespace: "AWS/EC2"
    metric_name: "CPUUtilization"
    statistic: "Average"

  instance:
    alarm_name: instance-termination
    alarm_description: "An instance in the rocketpool ASG is terminating"
    comparison_operator: "GreaterThanOrEqualToThreshold"
    evaluation_periods: "1"
    threshold: "1"
    period: "120"
    namespace: "AWS/AutoScaling"
    metric_name: "GreaterThanOrEqualToThreshold"
    statistic: "Average"

  service:
    alarm_name: in-service-instances
    alarm_description: "Rocketpool ASG has less than 1 instances in service."
    comparison_operator: "LessThanOrEqualToThreshold"
    evaluation_periods: "1"
    metric_name: "GroupInServiceInstances"
    namespace: "AWS/AutoScaling"
    period: "120"
    statistic: "Average"
    threshold: "0"

ec2:
  allow_workstation_ip: true # Automatically get your executing workstation public IP and add to SSH whitelist
  # cloudwatch: true         # Optional: defaults to True
  instance_type: 'r5g.large' # AWS Instance Type
  instance_arch: 'arm64'     # Optional: Defaults to 'amd64'
  # ebs_volume_size: 1000    # Optional: defaults to 1000G
  eip: true                  # Use an Elastic IP address
  # extra_secgroups: []      # Additional security list IDs applied to this node
  # keypair: my-key-pair     # Specify existing AWS SSH Keypair
  name: rp-node-00

# VPC Network Settings
vpc:
  cidr: '10.0.0.0/16'
  az: 'us-east-2c'
  private_subnet: '10.0.1.0/24'
  public_subnet: '10.0.101.0/24'

# S3 bucket used to store objects related to rocketpool deployment
s3:
  buckets:
    deploy:
      name: 'cloudstruct-rocketpool-deploy-mainnet-00'

sns:
#  Uncomment the below to enable slack alerting via AWS Lamba and SNS
#  slack:
#    topic_name: slack-rocketpool-alert
#    channel: #monitoring
#    webhook: ""
